/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.5.3 public/models/Zeus.glb -o src/components/Zeus.jsx -k -K -r public 
*/

import React, { useEffect } from 'react'
import { useGraph } from '@react-three/fiber'
import { useGLTF, useAnimations } from '@react-three/drei'
import { SkeletonUtils } from 'three-stdlib'

export function Zeus({
  animation,
  ...props}) {
  const group = React.useRef()
  const { scene, animations } = useGLTF('/models/Zeus.glb')
  const clone = React.useMemo(() => SkeletonUtils.clone(scene), [scene])
  const { nodes, materials } = useGraph(clone)
  const { actions } = useAnimations(animations, group)

  useEffect(() => {
    actions[animation]?.reset().fadeIn(0.24).play();
    return () => actions?.[animation]?.fadeOut(0.24);
  }, [animation]);

  return (
    <group ref={group} {...props} dispose={null}>
      <group name="Scene">
        <group name="Sketchfab_model" rotation={[0, -1.571, 0]}>
          <group name="zeusobjcleanermaterialmergergles" />
        </group>
        <group name="Armature" rotation={[Math.PI / 2, 0, 0]}>
          <primitive object={nodes.mixamorigHips} />
          <skinnedMesh name="Object_2" geometry={nodes.Object_2.geometry} material={materials.zeus_arcana_base_color} skeleton={nodes.Object_2.skeleton} />
          <skinnedMesh name="Object_3" geometry={nodes.Object_3.geometry} material={materials.zeus_belt_color} skeleton={nodes.Object_3.skeleton} />
          <skinnedMesh name="Object_4" geometry={nodes.Object_4.geometry} material={materials.zeus_hair_arcana_color} skeleton={nodes.Object_4.skeleton} />
        </group>
      </group>
    </group>
  )
}

useGLTF.preload('/models/Zeus.glb')
