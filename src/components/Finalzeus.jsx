/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.5.3 public/models/finalZeus.glb -o src/components/Finalzeus.jsx -k -K -r public 
*/

import React, { useEffect } from 'react'
import { useGraph } from '@react-three/fiber'
import { useGLTF, useAnimations, useFBX } from '@react-three/drei'
import { SkeletonUtils } from 'three-stdlib'

export function Finalzeus({
  animation,
  ...props
}) {
  const group = React.useRef()
  const { scene, animations } = useGLTF('/models/finalZeus.glb')
  const clone = React.useMemo(() => SkeletonUtils.clone(scene), [scene])
  const { nodes, materials } = useGraph(clone)

  const {animations:dancingAnimation}=useFBX("/models/dancing.fbx");

  dancingAnimation[0].name="dancing";
  const { actions } = useAnimations(dancingAnimation, group);
   useEffect(()=>{
    actions["dancing"].reset().play();
  },[]);

  

  return (
    <group ref={group} {...props} dispose={null}>
      <group name="Scene">
        <group name="Armature" scale={0.01}>
          <primitive object={nodes.RL_BoneRoot} />
          <skinnedMesh name="Object_0" geometry={nodes.Object_0.geometry} material={materials.zeus_arcana_base_color} skeleton={nodes.Object_0.skeleton} morphTargetDictionary={nodes.Object_0.morphTargetDictionary} morphTargetInfluences={nodes.Object_0.morphTargetInfluences} />
          <skinnedMesh name="Object_1" geometry={nodes.Object_1.geometry} material={materials.zeus_belt_color} skeleton={nodes.Object_1.skeleton} morphTargetDictionary={nodes.Object_1.morphTargetDictionary} morphTargetInfluences={nodes.Object_1.morphTargetInfluences} />
          <skinnedMesh name="Object_2" geometry={nodes.Object_2.geometry} material={materials.zeus_hair_arcana_color} skeleton={nodes.Object_2.skeleton} morphTargetDictionary={nodes.Object_2.morphTargetDictionary} morphTargetInfluences={nodes.Object_2.morphTargetInfluences} />
        </group>
      </group>
    </group>
  )
}

useGLTF.preload('/models/finalZeus.glb')
